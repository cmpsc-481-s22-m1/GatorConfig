[tool.poetry]
name = "GatorConfig"
version = "1.0.0"
description = "Autogeneration of GatorGradle configuration files."
authors = ["Daniel Ullrich", "Kobe Coleman", "Paige Downey", "Favour Ojo", "Wesley Long"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/cmpsc-481-s22-m1/GatorConfig"
repository = "https://github.com/cmpsc-481-s22-m1/GatorConfig"
packages = [
    { include = "gatorconfig" }
]
include = ["LICENSE"]
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Intended Audience :: Education",
    "License :: Freely Distributable",
    "Programming Language :: Python :: 3.7"
]

[tool.poetry.dependencies]
python = ">=3.7,<4.0"
typer = "^0.4.0"
"ruamel.yaml" = "^0.17.20"
requests = "^2.27.1"
PyQt6 = {version = "^6.2.2", optional = true}
gatoryaml = "^1.0.0"

[tool.poetry.dev-dependencies]
taskipy = "^1.9.0"
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pylint = "^2.12.2"
mock = "^4.0.3"
pytest-mock = "^3.6.1"
pytest-qt = "^4.0.2"
pytest-xvfb = "^2.0.0"
requests-mock = "^1.9.3"

[tool.poetry.extras]
gui = ["PyQt6"]

[tool.poetry.scripts]
gatorconfig = "gatorconfig.gator_config:cli"

[tool.taskipy.tasks]
test = "pytest --cov-report term-missing --cov-fail-under=70  --cov-branch --cov=gatorconfig tests/"
lint = "pylint gatorconfig/ tests/ gatorconfig/gui/"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
